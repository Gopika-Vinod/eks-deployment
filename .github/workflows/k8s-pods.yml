name: Check AWS EKS Resources

on:
  push:
    branches:
      - feature/deployment  # Trigger only on this branch

jobs:
  check-eks:
    runs-on: ubuntu-latest  # Use an Ubuntu runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # Checks out the repository

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Change this to your AWS region

      - name: Authenticate with Amazon EKS
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name my-eks-cluster
          kubectl cluster-info

      - name: Check Kubernetes Resources
        run: |
          kubectl get nodes
          kubectl get pods -n default
          kubectl get svc -n default

      - name: Describe Node for Debugging
        run: |
          kubectl describe node ip-172-31-37-16.ap-south-1.compute.internal

      - name: Describe Pending Pods for Debugging
        run: |
          PENDING_PODS=$(kubectl get pods -n default --field-selector=status.phase=Pending -o jsonpath='{.items[*].metadata.name}')
          for pod in $PENDING_PODS; do
            echo "Describing pod: $pod"
            kubectl describe pod $pod -n default
          done

      - name: Scale Up Node Group (If Needed)
        run: |
          eksctl scale nodegroup --cluster=my-eks-cluster --name=eks-node-group --nodes=2 || echo "Scaling failed, node group may not exist."

      - name: Restart AWS CNI Plugin (To Increase Max Pods Per Node)
        run: |
          kubectl set env daemonset aws-node -n kube-system WARM_ENI_TARGET=1
          kubectl set env daemonset aws-node -n kube-system WARM_IP_TARGET=1
          kubectl delete pod -n kube-system -l k8s-app=aws-node

      - name: Restart Nginx Deployment
        run: |
          kubectl rollout restart deployment my-nginx -n default
          kubectl get pods -n default
